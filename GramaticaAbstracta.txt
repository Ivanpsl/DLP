CATEGORIES
expresion,sentencia,tipo,definicion

NODES
programa -> definicion*;


defVariable:definicion -> nombre:string tipo; 
defFuncion:definicion -> nombre:string param:parametro* retorno:tipo vars:defVariable* sentencia*;
defStruct:definicion -> nombre:string campos:defVariable*;   

tipoInt:tipo->;
tipoReal:tipo->; 
tipoArray:tipo-> numero:string tipo;
tipoChar:tipo->;
tipoStruct:tipo-> nombre:string ;  
tipoVoid:tipo->;

parametro -> nombre:string tipo;


read:sentencia -> expresion;
print:sentencia -> expresion;
printsp:sentencia -> expresion;
println:sentencia -> expresion;
return:sentencia -> expresion;
if:sentencia -> condicion:expresion cierto:sentencia* falso:sentencia*;
while:sentencia -> condicion:expresion contenido:sentencia*;
asignacion:sentencia -> left:expresion right:expresion;

exprAritmetica:expresion -> left:expresion operador:string right:expresion;
exprLogica:expresion -> left:expresion operador:string right:expresion;
negacion:expresion -> expresion;
cast:expresion -> tipo expresion; 
literalInt:expresion -> lexema:string;
literalReal:expresion -> lexema:string;
caracter:expresion -> string;
variable:expresion -> lexema:string;

llamadaFuncion:expresion, sentencia -> nombre:string parametros:expresion*;

